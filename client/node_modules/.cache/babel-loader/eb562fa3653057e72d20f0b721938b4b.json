{"ast":null,"code":"import { combineReducers } from \"redux\"; //besides store we need persist reducer as well\n\nimport { persistReducer } from \"redux-persist\"; //storage - actual localStorage object on our window browser(I want to use local storage as my default storage)\n\nimport storage from \"redux-persist/lib/storage\";\nimport userReducer from \"./user/user.reducer\";\nimport cartReducer from \"./cart/cart.reducer\";\nimport directoryReducer from \"./directory/directory.reducer\";\nimport shopDataReducer from \"./shop/shop.reducer\"; //configuration. the only reducer we want to persist is cart\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"cart\"]\n}; //wee need to call combineReducers as rootReducer\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer,\n  shop: shopDataReducer\n}); // export default combineReducers({\n//   user: userReducer,\n//   cart: cartReducer,\n// });\n\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/Users/aliyevaparvana/Documents/Udemy/e-online-shop/client/src/redux/rootReducer.js"],"names":["combineReducers","persistReducer","storage","userReducer","cartReducer","directoryReducer","shopDataReducer","persistConfig","key","whitelist","rootReducer","user","cart","directory","shop"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC,C,CACA;;AACA,SAASC,cAAT,QAA+B,eAA/B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,eAAP,MAA4B,qBAA5B,C,CAEA;;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBN,EAAAA,OAFoB;AAGpBO,EAAAA,SAAS,EAAE,CAAC,MAAD;AAHS,CAAtB,C,CAMA;;AACA,MAAMC,WAAW,GAAGV,eAAe,CAAC;AAClCW,EAAAA,IAAI,EAAER,WAD4B;AAElCS,EAAAA,IAAI,EAAER,WAF4B;AAGlCS,EAAAA,SAAS,EAAER,gBAHuB;AAIlCS,EAAAA,IAAI,EAAER;AAJ4B,CAAD,CAAnC,C,CAOA;AACA;AACA;AACA;;AAEA,eAAeL,cAAc,CAACM,aAAD,EAAgBG,WAAhB,CAA7B","sourcesContent":["import { combineReducers } from \"redux\";\n//besides store we need persist reducer as well\nimport { persistReducer } from \"redux-persist\";\n//storage - actual localStorage object on our window browser(I want to use local storage as my default storage)\nimport storage from \"redux-persist/lib/storage\";\n\nimport userReducer from \"./user/user.reducer\";\nimport cartReducer from \"./cart/cart.reducer\";\nimport directoryReducer from \"./directory/directory.reducer\";\nimport shopDataReducer from \"./shop/shop.reducer\";\n\n//configuration. the only reducer we want to persist is cart\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"cart\"],\n};\n\n//wee need to call combineReducers as rootReducer\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer,\n  shop: shopDataReducer,\n});\n\n// export default combineReducers({\n//   user: userReducer,\n//   cart: cartReducer,\n// });\n\nexport default persistReducer(persistConfig, rootReducer);\n"]},"metadata":{},"sourceType":"module"}