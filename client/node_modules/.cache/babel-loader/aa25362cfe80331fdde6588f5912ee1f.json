{"ast":null,"code":"var _jsxFileName = \"/Users/aliyevaparvana/Documents/Udemy/e-online-shop/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport { convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport CollectionOverview from \"../collections-overview/collections-overview.component\";\nimport CategoryPage from \"../category/category.component\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"collection\"); //whenever the collection updates or runs for the first time this collection ref will send us the snapshot representing the code of our collections objects array\n    //at the time when this code renders\n\n    const coll = collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot); // console.log(collectionMap);\n\n      return collectionMap;\n    });\n    this.props.collect(coll);\n  }\n\n  render() {\n    const {\n      match,\n      collect\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CategoryPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst dispatchToProps = dispatch => ({\n  collect: collection => dispatch(updateCollections(collection))\n});\n\nexport default connect(null, dispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/aliyevaparvana/Documents/Udemy/e-online-shop/src/pages/shop/shop.component.jsx"],"names":["React","Component","Route","connect","firestore","convertCollectionSnapshotToMap","CollectionOverview","CategoryPage","updateCollections","ShopPage","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","coll","onSnapshot","snapshot","collectionMap","props","collect","render","match","path","dispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,+BAA1B;AAEA,SAASC,8BAAT,QAA+C,+BAA/C;AACA,OAAOC,kBAAP,MAA+B,wDAA/B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BS,uBAD+B,GACL,IADK;AAAA;;AAG/BC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,YAArB,CAAtB,CADkB,CAElB;AACA;;AACA,UAAMC,IAAI,GAAGF,aAAa,CAACG,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AACxD,YAAMC,aAAa,GAAGZ,8BAA8B,CAACW,QAAD,CAApD,CADwD,CAExD;;AACA,aAAOC,aAAP;AACD,KAJY,CAAb;AAKA,SAAKC,KAAL,CAAWC,OAAX,CAAmBL,IAAnB;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASF,MAAAA;AAAT,QAAqB,KAAKD,KAAhC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEhB,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEe,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEf,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAvB8B;;AA0BjC,MAAMgB,eAAe,GAAIC,QAAD,KAAe;AACrCL,EAAAA,OAAO,EAAGN,UAAD,IAAgBW,QAAQ,CAAChB,iBAAiB,CAACK,UAAD,CAAlB;AADI,CAAf,CAAxB;;AAIA,eAAeV,OAAO,CAAC,IAAD,EAAOoB,eAAP,CAAP,CAA+Bd,QAA/B,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { firestore } from \"../../firebase/firebase.utils\";\n\nimport { convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport CollectionOverview from \"../collections-overview/collections-overview.component\";\nimport CategoryPage from \"../category/category.component\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\n\nclass ShopPage extends Component {\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"collection\");\n    //whenever the collection updates or runs for the first time this collection ref will send us the snapshot representing the code of our collections objects array\n    //at the time when this code renders\n    const coll = collectionRef.onSnapshot(async (snapshot) => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      // console.log(collectionMap);\n      return collectionMap;\n    });\n    this.props.collect(coll);\n  }\n\n  render() {\n    const { match, collect } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionOverview} />\n        <Route path={`${match.path}/:collectionId`} component={CategoryPage} />\n      </div>\n    );\n  }\n}\n\nconst dispatchToProps = (dispatch) => ({\n  collect: (collection) => dispatch(updateCollections(collection)),\n});\n\nexport default connect(null, dispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}