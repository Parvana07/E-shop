{"ast":null,"code":"import ShopActionTypes from \"./shop.types\"; // export const updateCollections = (collectionsMap) => ({\n//   type: ShopActionTypes.UPDATE_COLLECTIONS,\n//   payload: collectionsMap,\n// });\n\nexport const fetchCollectionStarts = () => ({\n  type: ShopActionTypes.FETCH_COLLECTION_START\n});\nexport const fetchCollectionSuccess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTION_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionFails = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTION_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionStartAsync = dispatch => {\n  const collectionRef = firestore.collection(\"collection\"); //whenever the collection updates or runs for the first time this collection ref will send us the snapshot representing the code of our collections objects array\n  //at the time when this code renders\n\n  collectionRef.get().then(snapshot => {\n    const collectionMap = convertCollectionSnapshotToMap(snapshot); // console.log(\"i am collection\", collectionMap);\n\n    updateCollections(collectionMap);\n    this.setState({\n      isLoading: false\n    });\n  });\n};","map":{"version":3,"sources":["/Users/aliyevaparvana/Documents/Udemy/e-online-shop/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","fetchCollectionStarts","type","FETCH_COLLECTION_START","fetchCollectionSuccess","collectionMap","FETCH_COLLECTION_SUCCESS","payload","fetchCollectionFails","errorMessage","FETCH_COLLECTION_FAILURE","fetchCollectionStartAsync","dispatch","collectionRef","firestore","collection","get","then","snapshot","convertCollectionSnapshotToMap","updateCollections","setState","isLoading"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B,C,CAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,sBAAsB,GAAIC,aAAD,KAAoB;AACxDH,EAAAA,IAAI,EAAEF,eAAe,CAACM,wBADkC;AAExDC,EAAAA,OAAO,EAAEF;AAF+C,CAApB,CAA/B;AAKP,OAAO,MAAMG,oBAAoB,GAAIC,YAAD,KAAmB;AACrDP,EAAAA,IAAI,EAAEF,eAAe,CAACU,wBAD+B;AAErDH,EAAAA,OAAO,EAAEE;AAF4C,CAAnB,CAA7B;AAKP,OAAO,MAAME,yBAAyB,GAAIC,QAAD,IAAc;AACrD,QAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqB,YAArB,CAAtB,CADqD,CAErD;AACA;;AACAF,EAAAA,aAAa,CAACG,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACrC,UAAMb,aAAa,GAAGc,8BAA8B,CAACD,QAAD,CAApD,CADqC,CAErC;;AACAE,IAAAA,iBAAiB,CAACf,aAAD,CAAjB;AACA,SAAKgB,QAAL,CAAc;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAd;AACD,GALD;AAMD,CAVM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\n\n// export const updateCollections = (collectionsMap) => ({\n//   type: ShopActionTypes.UPDATE_COLLECTIONS,\n//   payload: collectionsMap,\n// });\n\nexport const fetchCollectionStarts = () => ({\n  type: ShopActionTypes.FETCH_COLLECTION_START,\n});\n\nexport const fetchCollectionSuccess = (collectionMap) => ({\n  type: ShopActionTypes.FETCH_COLLECTION_SUCCESS,\n  payload: collectionMap,\n});\n\nexport const fetchCollectionFails = (errorMessage) => ({\n  type: ShopActionTypes.FETCH_COLLECTION_FAILURE,\n  payload: errorMessage,\n});\n\nexport const fetchCollectionStartAsync = (dispatch) => {\n  const collectionRef = firestore.collection(\"collection\");\n  //whenever the collection updates or runs for the first time this collection ref will send us the snapshot representing the code of our collections objects array\n  //at the time when this code renders\n  collectionRef.get().then((snapshot) => {\n    const collectionMap = convertCollectionSnapshotToMap(snapshot);\n    // console.log(\"i am collection\", collectionMap);\n    updateCollections(collectionMap);\n    this.setState({ isLoading: false });\n  });\n};\n"]},"metadata":{},"sourceType":"module"}