{"ast":null,"code":"var _jsxFileName = \"/Users/aliyevaparvana/Documents/Udemy/e-online-shop/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\"; // import {\n//   auth,\n//   createUserProfileDocument,\n//   // addCollectionAndDocuments,\n// } from \"./firebase/firebase.utils\";\n\nimport \"./App.css\";\nimport Homepage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./pages/header/header.component\";\nimport SignInAndSignUpPage from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up.component\";\nimport { setCurrentUser } from \"./redux/user/user.actions\";\nimport { selectCurrentUser } from \"./redux/user/user.selector\"; // import { selectCollectionsForPreview } from \"./redux/shop/shop.selector\";\n\nimport CheckoutPage from \"./pages/checkout/checkout.component\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {//for adding shopdata to firebase\n    // const { setCurrentUser, collectionArray } = this.props;\n    // const { setCurrentUser } = this.props;\n    // this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n    //   if (userAuth) {\n    //     const userRef = await createUserProfileDocument(userAuth);\n    //     //returns object representing data that is currently stored  in our database, it is very similar to offStateChange\n    //     userRef.onSnapshot((snapShot) => {\n    //       //setting CurrentUser with React:\n    //       //   this.setState({\n    //       //     id: snapShot.id,\n    //       //     ...snapShot.data(),\n    //       //   });\n    //       //setting current User with Redux:\n    //       setCurrentUser({\n    //         id: snapShot.id,\n    //         ...snapShot.data(),\n    //       });\n    //     });\n    //   }\n    //setting CurrentUser with React:\n    // this.setState({\n    //   currentUser: userAuth,\n    // });\n    //setting current User with Redux:\n    //   setCurrentUser(userAuth);\n    //   // addCollectionAndDocuments(\n    //   //   \"collection\",\n    //   //   collectionArray.map(({ title, items }) => ({ title, items }))\n    //   // );\n    // });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  } //in React we need to pass currentUser to header component:\n  //currentUser={this.state.currentUser}\n\n\n  render() {\n    //component={Homepage}\n    const {\n      currentUser\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => currentUser ? /*#__PURE__*/React.createElement(Homepage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/signin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 44\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage // render={() =>\n      //   currentUser ? <CheckoutPage /> : <Redirect to=\"signin\" />\n      // }\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(SignInAndSignUpPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 51\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    })));\n  }\n\n} //using selector for memoization\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser //this is for saving our data in firebase\n  // collectionArray: selectCollectionsForPreview,\n\n}); // const mapStateToProps = ({ user }) => ({\n//   currentUser: user.currentUser,\n// });\n// const mapDispatchToProps = (dispatch) => ({\n//   setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n// });\n//we dont do anything with currentuser, besides setting the value to it, thats why we dont need mapstateProps, and passing it as null\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/aliyevaparvana/Documents/Udemy/e-online-shop/src/App.js"],"names":["React","Component","Route","Switch","Redirect","connect","createStructuredSelector","Homepage","ShopPage","Header","SignInAndSignUpPage","setCurrentUser","selectCurrentUser","CheckoutPage","App","unsubscribeFromAuth","componentDidMount","componentWillUnmount","render","currentUser","props","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\n// import {\n//   auth,\n//   createUserProfileDocument,\n//   // addCollectionAndDocuments,\n// } from \"./firebase/firebase.utils\";\nimport \"./App.css\";\nimport Homepage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./pages/header/header.component\";\nimport SignInAndSignUpPage from \"./pages/sign-in-and-sign-up/sign-in-and-sign-up.component\";\nimport { setCurrentUser } from \"./redux/user/user.actions\";\nimport { selectCurrentUser } from \"./redux/user/user.selector\";\n// import { selectCollectionsForPreview } from \"./redux/shop/shop.selector\";\nimport CheckoutPage from \"./pages/checkout/checkout.component\";\n\nclass App extends Component {\n  //setting CurrentUser with React:\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     // currentUser: null,\n  //   };\n  // }\n  unsubscribeFromAuth = null;\n  componentDidMount() {\n    //for adding shopdata to firebase\n    // const { setCurrentUser, collectionArray } = this.props;\n    // const { setCurrentUser } = this.props;\n    // this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n    //   if (userAuth) {\n    //     const userRef = await createUserProfileDocument(userAuth);\n    //     //returns object representing data that is currently stored  in our database, it is very similar to offStateChange\n    //     userRef.onSnapshot((snapShot) => {\n    //       //setting CurrentUser with React:\n    //       //   this.setState({\n    //       //     id: snapShot.id,\n    //       //     ...snapShot.data(),\n    //       //   });\n    //       //setting current User with Redux:\n    //       setCurrentUser({\n    //         id: snapShot.id,\n    //         ...snapShot.data(),\n    //       });\n    //     });\n    //   }\n    //setting CurrentUser with React:\n    // this.setState({\n    //   currentUser: userAuth,\n    // });\n    //setting current User with Redux:\n    //   setCurrentUser(userAuth);\n    //   // addCollectionAndDocuments(\n    //   //   \"collection\",\n    //   //   collectionArray.map(({ title, items }) => ({ title, items }))\n    //   // );\n    // });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n  //in React we need to pass currentUser to header component:\n  //currentUser={this.state.currentUser}\n  render() {\n    //component={Homepage}\n    const { currentUser } = this.props;\n    return (\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() =>\n              currentUser ? <Homepage /> : <Redirect to=\"/signin\" />\n            }\n          />\n          <Route path=\"/shop\" component={ShopPage} />\n          <Route\n            exact\n            path=\"/checkout\"\n            component={CheckoutPage}\n            // render={() =>\n            //   currentUser ? <CheckoutPage /> : <Redirect to=\"signin\" />\n            // }\n          />\n          <Route\n            exact\n            path=\"/signin\"\n            render={() =>\n              currentUser ? <Redirect to=\"/\" /> : <SignInAndSignUpPage />\n            }\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\n//using selector for memoization\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  //this is for saving our data in firebase\n  // collectionArray: selectCollectionsForPreview,\n});\n\n// const mapStateToProps = ({ user }) => ({\n//   currentUser: user.currentUser,\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n// });\n\n//we dont do anything with currentuser, besides setting the value to it, thats why we dont need mapstateProps, and passing it as null\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}