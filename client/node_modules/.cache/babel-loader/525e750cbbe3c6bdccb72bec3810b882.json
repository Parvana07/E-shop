{"ast":null,"code":"var _jsxFileName = \"/Users/aliyevaparvana/Documents/Udemy/e-online-shop/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport { convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport CollectionOverview from \"../collections-overview/collections-overview.component\";\nimport CategoryPage from \"../category/category.component\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../with-spinner/with-spinner.component\";\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection(\"collection\"); //whenever the collection updates or runs for the first time this collection ref will send us the snapshot representing the code of our collections objects array\n    //at the time when this code renders\n\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      console.log(\"i am collection\", collectionMap);\n      updateCollections(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CategoryPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMaps => dispatch(updateCollections(collectionsMaps))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/aliyevaparvana/Documents/Udemy/e-online-shop/src/pages/shop/shop.component.jsx"],"names":["React","Component","Route","connect","firestore","convertCollectionSnapshotToMap","CollectionOverview","CategoryPage","updateCollections","WithSpinner","ShopPage","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionMap","console","log","setState","render","match","path","mapDispatchToProps","dispatch","collectionsMaps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,+BAA1B;AAEA,SAASC,8BAAT,QAA+C,+BAA/C;AACA,OAAOC,kBAAP,MAA+B,wDAA/B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,wCAAxB;;AAEA,MAAMC,QAAN,SAAuBT,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BU,KAD+B,GACvB;AACNC,MAAAA,OAAO,EAAE;AADH,KADuB;AAAA,SAK/BC,uBAL+B,GAKL,IALK;AAAA;;AAO/BC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEN,MAAAA;AAAF,QAAwB,KAAKO,KAAnC;AACA,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,YAArB,CAAtB,CAFkB,CAGlB;AACA;;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AAC3C,YAAMC,aAAa,GAAGf,8BAA8B,CAACc,QAAD,CAApD;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,aAA/B;AACAZ,MAAAA,iBAAiB,CAACY,aAAD,CAAjB;AACA,WAAKG,QAAL,CAAc;AAAEX,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KALD;AAMD;;AACDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKV,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEU,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEpB,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEmB,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEnB,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA3B8B;;AA8BjC,MAAMoB,kBAAkB,GAAIC,QAAD,KAAe;AACxCpB,EAAAA,iBAAiB,EAAGqB,eAAD,IACjBD,QAAQ,CAACpB,iBAAiB,CAACqB,eAAD,CAAlB;AAF8B,CAAf,CAA3B;;AAKA,eAAe1B,OAAO,CAAC,IAAD,EAAOwB,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { firestore } from \"../../firebase/firebase.utils\";\n\nimport { convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport CollectionOverview from \"../collections-overview/collections-overview.component\";\nimport CategoryPage from \"../category/category.component\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../with-spinner/with-spinner.component\";\n\nclass ShopPage extends Component {\n  state = {\n    loading: true,\n  };\n\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection(\"collection\");\n    //whenever the collection updates or runs for the first time this collection ref will send us the snapshot representing the code of our collections objects array\n    //at the time when this code renders\n    collectionRef.onSnapshot(async (snapshot) => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      console.log(\"i am collection\", collectionMap);\n      updateCollections(collectionMap);\n      this.setState({ loading: false });\n    });\n  }\n  render() {\n    const { match } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionOverview} />\n        <Route path={`${match.path}/:collectionId`} component={CategoryPage} />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateCollections: (collectionsMaps) =>\n    dispatch(updateCollections(collectionsMaps)),\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}