{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTION_START\n});\nexport const fetchCollectionSuccess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTION_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTION_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collection\");\n    dispatch(fetchCollectionStart()); //whenever the collection updates or runs for the first time this collection ref will send us the snapshot representing the code of our collections objects array\n    //at the time when this code renders\n\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot); // console.log(\"i am collection\", collectionMap);\n      // this.setState({ isLoading: false });\n\n      dispatch(fetchCollectionSuccess(collectionMap));\n    }).catch(error => dispatch(fetchCollectionFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/aliyevaparvana/Documents/Udemy/e-online-shop/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionStart","type","FETCH_COLLECTION_START","fetchCollectionSuccess","collectionMap","FETCH_COLLECTION_SUCCESS","payload","fetchCollectionFailure","errorMessage","FETCH_COLLECTION_FAILURE","fetchCollectionStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SACEC,SADF,EAEEC,8BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AACzCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADmB,CAAP,CAA7B;AAIP,OAAO,MAAMC,sBAAsB,GAAIC,aAAD,KAAoB;AACxDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,wBADkC;AAExDC,EAAAA,OAAO,EAAEF;AAF+C,CAApB,CAA/B;AAKP,OAAO,MAAMG,sBAAsB,GAAIC,YAAD,KAAmB;AACvDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,wBADiC;AAEvDH,EAAAA,OAAO,EAAEE;AAF8C,CAAnB,CAA/B;AAKP,OAAO,MAAME,yBAAyB,GAAG,MAAM;AAC7C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,YAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,oBAAoB,EAArB,CAAR,CAFmB,CAGnB;AACA;;AACAY,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMZ,aAAa,GAAGL,8BAA8B,CAACiB,QAAD,CAApD,CADkB,CAElB;AACA;;AACAL,MAAAA,QAAQ,CAACR,sBAAsB,CAACC,aAAD,CAAvB,CAAR;AACD,KAPH,EAQGa,KARH,CAQUC,KAAD,IAAWP,QAAQ,CAACJ,sBAAsB,CAACW,KAAK,CAACC,OAAP,CAAvB,CAR5B;AASD,GAdD;AAeD,CAhBM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\n\nimport {\n  firestore,\n  convertCollectionSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTION_START,\n});\n\nexport const fetchCollectionSuccess = (collectionMap) => ({\n  type: ShopActionTypes.FETCH_COLLECTION_SUCCESS,\n  payload: collectionMap,\n});\n\nexport const fetchCollectionFailure = (errorMessage) => ({\n  type: ShopActionTypes.FETCH_COLLECTION_FAILURE,\n  payload: errorMessage,\n});\n\nexport const fetchCollectionStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection(\"collection\");\n    dispatch(fetchCollectionStart());\n    //whenever the collection updates or runs for the first time this collection ref will send us the snapshot representing the code of our collections objects array\n    //at the time when this code renders\n    collectionRef\n      .get()\n      .then((snapshot) => {\n        const collectionMap = convertCollectionSnapshotToMap(snapshot);\n        // console.log(\"i am collection\", collectionMap);\n        // this.setState({ isLoading: false });\n        dispatch(fetchCollectionSuccess(collectionMap));\n      })\n      .catch((error) => dispatch(fetchCollectionFailure(error.message)));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}