{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport { auth, googleProvider, createUserProfileDocument, signInWithEmailAndPassword } from \"../../firebase/firebase.utils\";\nimport { userActionTypes } from \"./user.types\";\nimport { signInSuccess, signInFailure } from \"./user.actions\";\nexport function* signIn(user) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get(); //put, puts things back into our regular Redux flow\n\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  console.log(\"I am fired\");\n\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    console.log(\"I am user\", user);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get(); //put, puts things back into our regular Redux flow\n\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  } //   try {\n  //  const { user } = yield auth.signInmethod(googleProvider);\n  //  signIn(user)\n  //   } catch (error) {\n  //  yield put(signInFailure(error));\n  //   }\n\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/aliyevaparvana/Documents/Udemy/e-online-shop/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","signInWithEmailAndPassword","userActionTypes","signInSuccess","signInFailure","signIn","user","userRef","userSnapshot","get","id","data","error","signInWithGoogle","console","log","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,EAIEC,0BAJF,QAKO,+BALP;AAOA,SAASC,eAAT,QAAgC,cAAhC;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AAEA,OAAO,UAAUC,MAAV,CAAiBC,IAAjB,EAAuB;AAC5B,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACG,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B,CAFE,CAGF;;AACA,UAAMd,GAAG,CAACQ,aAAa,CAAC;AAAEO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACS,aAAa,CAACQ,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AACA,MAAI;AACF,UAAM;AAAET,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACkB,eAAL,CAAqBjB,cAArB,CAAvB;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBT,IAAzB;AACA,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACG,yBAAD,EAA4BM,IAA5B,CAA1B;AAEA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B,CALE,CAMF;;AACA,UAAMd,GAAG,CAACQ,aAAa,CAAC;AAAEO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACS,aAAa,CAACQ,KAAD,CAAd,CAAT;AACD,GAZiC,CAalC;AACA;AACA;AACA;AACA;AACA;;AACD;AAED,OAAO,UAAUK,mBAAV,GAAgC;AACrC,QAAMvB,UAAU,CAACQ,eAAe,CAACgB,oBAAjB,EAAuCL,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUM,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACF,UAAM;AAAEhB,MAAAA;AAAF,QAAW,MAAMR,IAAI,CAACG,0BAAL,CAAgCoB,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMf,OAAO,GAAG,MAAMV,IAAI,CAACG,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACQ,aAAa,CAAC;AAAEO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF;AAA1B,KAAD,CAAd,CAAT;AACD,GALD,CAKE,OAAOI,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACS,aAAa,CAACQ,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUW,kBAAV,GAA+B;AACpC,QAAM7B,UAAU,CAACQ,eAAe,CAACsB,mBAAjB,EAAsCL,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUM,SAAV,GAAsB;AAC3B,QAAM7B,GAAG,CAAC,CAACC,IAAI,CAACoB,mBAAD,CAAL,EAA4BpB,IAAI,CAAC0B,kBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  signInWithEmailAndPassword,\n} from \"../../firebase/firebase.utils\";\n\nimport { userActionTypes } from \"./user.types\";\nimport { signInSuccess, signInFailure } from \"./user.actions\";\n\nexport function* signIn(user) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    //put, puts things back into our regular Redux flow\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  console.log(\"I am fired\");\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    console.log(\"I am user\", user);\n    const userRef = yield call(createUserProfileDocument, user);\n\n    const userSnapshot = yield userRef.get();\n    //put, puts things back into our regular Redux flow\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n  //   try {\n  //  const { user } = yield auth.signInmethod(googleProvider);\n  //  signIn(user)\n  //   } catch (error) {\n  //  yield put(signInFailure(error));\n  //   }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}